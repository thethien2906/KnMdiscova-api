# Generated by Django 5.1.9 on 2025-05-27 01:25

import django.core.validators
import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('parents', '0002_alter_parent_phone_number'),
    ]

    operations = [
        migrations.CreateModel(
            name='Child',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier for the child', primary_key=True, serialize=False)),
                ('first_name', models.CharField(help_text="Child's first name", max_length=100, verbose_name='first name')),
                ('date_of_birth', models.DateField(help_text="Child's date of birth", verbose_name='date of birth')),
                ('last_name', models.CharField(blank=True, help_text="Child's last name", max_length=100, verbose_name='last name')),
                ('nickname', models.CharField(blank=True, help_text="Child's preferred nickname", max_length=100, verbose_name='nickname')),
                ('gender', models.CharField(blank=True, help_text="Child's gender identity", max_length=50, verbose_name='gender')),
                ('profile_picture_url', models.URLField(blank=True, help_text="URL to child's profile picture", max_length=512, null=True, verbose_name='profile picture')),
                ('height_cm', models.PositiveIntegerField(blank=True, help_text="Child's height in centimeters", null=True, validators=[django.core.validators.MinValueValidator(50, message='Height must be at least 50cm'), django.core.validators.MaxValueValidator(250, message='Height must be less than 250cm')], verbose_name='height (cm)')),
                ('weight_kg', models.PositiveIntegerField(blank=True, help_text="Child's weight in kilograms", null=True, validators=[django.core.validators.MinValueValidator(10, message='Weight must be at least 10kg'), django.core.validators.MaxValueValidator(200, message='Weight must be less than 200kg')], verbose_name='weight (kg)')),
                ('health_status', models.CharField(blank=True, help_text='General health status or concerns', max_length=255, verbose_name='health status')),
                ('medical_history', models.TextField(blank=True, help_text='Relevant medical history', verbose_name='medical history')),
                ('vaccination_status', models.BooleanField(blank=True, help_text="Whether child's vaccinations are current", null=True, verbose_name='vaccination up to date')),
                ('emotional_issues', models.TextField(blank=True, help_text='Any emotional concerns or challenges', verbose_name='emotional issues')),
                ('social_behavior', models.TextField(blank=True, help_text='Observations about social interactions', verbose_name='social behavior')),
                ('developmental_concerns', models.TextField(blank=True, help_text='Any developmental concerns or delays', verbose_name='developmental concerns')),
                ('family_peer_relationship', models.TextField(blank=True, help_text='How child relates to family and peers', verbose_name='family and peer relationships')),
                ('has_seen_psychologist', models.BooleanField(default=False, help_text='Whether child has previously seen a psychologist', verbose_name='has seen psychologist')),
                ('has_received_therapy', models.BooleanField(default=False, help_text='Whether child has received therapy services', verbose_name='has received therapy')),
                ('parental_goals', models.TextField(blank=True, help_text="Parent's goals for the child's development", verbose_name='parental goals')),
                ('activity_tips', models.TextField(blank=True, help_text='Suggested activities or interventions', verbose_name='activity tips')),
                ('parental_notes', models.TextField(blank=True, help_text='Additional notes from parent', verbose_name='parental notes')),
                ('primary_language', models.CharField(blank=True, help_text="Child's primary language", max_length=50, verbose_name='primary language')),
                ('school_grade_level', models.CharField(blank=True, help_text='Current grade level (international system)', max_length=50, verbose_name='school grade level')),
                ('consent_forms_signed', models.JSONField(blank=True, default=dict, help_text='Record of signed consent forms', verbose_name='consent forms signed')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('parent', models.ForeignKey(help_text='Parent this child belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='children', to='parents.parent')),
            ],
            options={
                'verbose_name': 'Child',
                'verbose_name_plural': 'Children',
                'db_table': 'children',
                'ordering': ['first_name', 'last_name'],
                'indexes': [models.Index(fields=['parent'], name='children_parent__dc54ff_idx'), models.Index(fields=['first_name', 'last_name'], name='children_first_n_4ff0cb_idx'), models.Index(fields=['date_of_birth'], name='children_date_of_0b9b72_idx'), models.Index(fields=['created_at'], name='children_created_6650d1_idx')],
            },
        ),
    ]
