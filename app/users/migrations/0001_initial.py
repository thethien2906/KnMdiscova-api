# Generated by Django 5.1.9 on 2025-05-23 06:34

import django.utils.timezone
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier for the user', primary_key=True, serialize=False)),
                ('email', models.EmailField(help_text="User's email address, used for login", max_length=254, unique=True, verbose_name='email address')),
                ('user_type', models.CharField(choices=[('Parent', 'Parent'), ('Psychologist', 'Psychologist'), ('Admin', 'Admin')], help_text='Type of user: Parent, Psychologist, or Admin', max_length=20)),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active.', verbose_name='active')),
                ('is_verified', models.BooleanField(default=False, help_text='Designates whether user has verified their email address.', verbose_name='verified')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into the admin site.', verbose_name='staff status')),
                ('profile_picture_url', models.URLField(blank=True, help_text="URL to user's profile picture", max_length=512, null=True, verbose_name='profile picture')),
                ('user_timezone', models.CharField(default='UTC', help_text="User's timezone for scheduling appointments", max_length=50, verbose_name='timezone')),
                ('registration_date', models.DateTimeField(default=django.utils.timezone.now, help_text='When the user registered', verbose_name='registration date')),
                ('last_login_date', models.DateTimeField(blank=True, help_text='Last time user logged in', null=True, verbose_name='last login')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
                'db_table': 'users',
                'indexes': [models.Index(fields=['email'], name='users_email_4b85f2_idx'), models.Index(fields=['user_type'], name='users_user_ty_578f8f_idx'), models.Index(fields=['is_active', 'is_verified'], name='users_is_acti_6b2a46_idx'), models.Index(fields=['created_at'], name='users_created_6541e9_idx')],
            },
        ),
    ]
