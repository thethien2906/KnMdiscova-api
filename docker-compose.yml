services:  # Remove version line (obsolete)
  app:
    build:
      context: .
      args:
        - DEV=true
    ports:
      - "8000:8000"
    volumes:
      - ./app:/app
    command: >
      sh -c "python manage.py wait_for_db &&
             python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"
    environment:
      # Use environment variables from GitHub Actions, with fallbacks for local dev
      - DEBUG=${DEBUG:-true}
      - DB_HOST=${DB_HOST:-db}
      - DB_NAME=${DB_NAME:-testdb}
      - DB_USER=${DB_USER:-testuser}
      - DB_PASSWORD=${DB_PASSWORD:-testpass}  # Match your CI password
      - SECRET_KEY=${SECRET_KEY:-your-local-dev-secret}
      - EMAIL_BACKEND=${EMAIL_BACKEND:-django.core.mail.backends.console.EmailBackend}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS:-localhost,127.0.0.1}
      - EMAIL_HOST=${EMAIL_HOST:-}
      - EMAIL_PORT=${EMAIL_PORT:-587}
      - EMAIL_USE_TLS=${EMAIL_USE_TLS:-true}
      - EMAIL_HOST_USER=${EMAIL_HOST_USER:-}
      - EMAIL_HOST_PASSWORD=${EMAIL_HOST_PASSWORD:-}
      - DEFAULT_FROM_EMAIL=${DEFAULT_FROM_EMAIL:-K&Mdiscova <noreply@kmdiscova.com>}
      - FRONTEND_URL= ${FRONTEND_URL:-http://localhost:8000}
      - SUPPORT_EMAIL=${SUPPORT_EMAIL:-support@kmdiscova.com}
      - COMPANY_ADDRESS=${COMPANY_ADDRESS:-}
      - REDIS_HOST=${REDIS_HOST:-}
      - REDIS_PORT=${REDIS_PORT:-}
    depends_on:
      - db

  db:
    image: postgres:16-alpine
    environment:
      - POSTGRES_USER=${DB_USER:-testuser}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-testpass}
      - POSTGRES_DB=${DB_NAME:-testdb}
    volumes:
      - dev-db-data:/var/lib/postgresql/data
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data

  celery-worker:
    build:
      context: .
      args:
        - DEV=true
    volumes:
      - ./app:/app
    command: celery -A app worker --loglevel=info --queues=default,slots
    depends_on:
      - db
      - redis
    environment:
      - DJANGO_SETTINGS_MODULE=app.settings.development
      - REDIS_HOST=${REDIS_HOST:-}
      - REDIS_PORT=${REDIS_PORT:-}

  celery-beat:
    build:
      context: .
      args:
        - DEV=true
    volumes:
      - ./app:/app
    command: celery -A app beat --loglevel=info --scheduler django_celery_beat.schedulers:DatabaseScheduler
    depends_on:
      - db
      - redis
    environment:
      - DJANGO_SETTINGS_MODULE=app.settings.development
      - REDIS_HOST=${REDIS_HOST:-}
      - REDIS_PORT=${REDIS_PORT:-}
volumes:
  dev-db-data:
  redis-data:
